There is a collection of input strings and a collection of query strings. For each query string, determine how many times it occurs in the list of input strings.
For example, given input strings = [‘ab’, ‘ab’, ‘abc’] and queries = [‘ab’, ‘abc’, ‘bc’], 
we find 2 instances of ‘ab’, 1 of ‘abc’ and of 0 of ‘bc’. For each query, we add an element to our return array, results = [2, 1, 0].

Input Format

The first line contains an integer n, the size of strings.
Each of the next n lines contains a string strings[i].
The next line contains q, the size of queries.
Each of the next q lines contains a string q[i].

Constraints

1<= n <= 1000
1 <= 1 <= 1000
1 <= |strings[i]|, |queries[i]| <=20 

Output Format

Return an integer array of the results of all queries in order.
Input

4 aba baba aba xzxb 
3 aba xzxb ab

Output
2
1
0










THIS IS THE SOLUTION METHOD


static int[] matchingStrings(String[] strings, String[] queries) {

       // ArrayList<Integer>list = new ArrayList<>();
       int[] ay = new int[queries.length];
        for(int x=0;x<queries.length;x++)
        {
            int count =0;
            for(int i=0;i<strings.length;i++)
            {
                if(queries[x].equals(strings[i]))
                {
                    count ++;
                }
            }
            //list.add(count);
            ay[x] = count;
        }

        return ay;


    }

